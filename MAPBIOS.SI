(*******************************************************************)
(*  Proc‚dure   : Carte BIOS                                       *)
(*  Description : Affiche une fenˆtre decrivant les informations   *)
(*                de la RAM du BIOS.                               *)
(*******************************************************************)
(*  Entr‚e      : X et Y                                           *)
(*  Sortie      : Aucun                                            *)
(*******************************************************************)

Procedure CarteBIOS(X,Y:Byte);
Const Position : Byte = 0;
      Donne    : Array[0..73] of Byte = (
                  $00,$02,$04,$06,$08,$0A,$0C,$0E,$10,$12,$13,$15,$17,$18,
                  $19,$1A,$1C,$1E,$3E,$3F,$40,$41,$42,$49,$4A,$4C,$4E,$50,
                  $60,$61,$62,$63,$65,$66,$67,$69,$6B,$6C,$6E,$70,$71,$72,
                  $74,$75,$76,$77,$78,$79,$7A,$7B,$7C,$7D,$7E,$7F,$80,$82,
                  $84,$85,$87,$89,$8B,$8C,$8D,$8E,$8F,$90,$91,$92,$94,$95,
                  $96,$97,$98,$A0);
      HotKey      = 12;
      HotKeyAT    = 13;
      HorlogeLo   = 37;
      HorlogeHi   = 38;
      HorlogeReel = 72;
Var XC,YC      : Word;
    Segment    : Word;
    OffSet     : Word;
    Boucle     : Byte;
    Debut,Fin  : Byte;
    Temp       : Byte;
    Couleur    : Byte;

 Procedure EffaceLigne;
 Begin
  ClaireLigne(Ligne,32,MenuNormal);
 End;

 Procedure AfficheHotKey;
 Label 10;
 Var X,Y      : Byte;
     Compteur : Byte;
     Boucle   : Byte;
     Tableau  : Pointer;

  Procedure AfficheEtat;
  Var HotKey : Byte Absolute $0040:$17;
  Begin
   If(HotKey and 1=1)Then Ecrit(X+7,Y+5,'Actionn‚',$8B)
                     Else Ecrit(X+7,Y+5,'Lach‚   ',$8B);
   If(HotKey and 2=2)Then Ecrit(X+7,Y+6,'Actionn‚',$8B)
                     Else Ecrit(X+7,Y+6,'Lach‚   ',$8B);
   If(HotKey and 4=4)Then Ecrit(X+7,Y+7,'Actionn‚',$8B)
                     Else Ecrit(X+7,Y+7,'Lach‚   ',$8B);
   If(HotKey and 8=8)Then Ecrit(X+7,Y+8,'Actionn‚',$8B)
                     Else Ecrit(X+7,Y+8,'Lach‚   ',$8B);
   If(HotKey and 16=16)Then Ecrit(X+7,Y+9,'Allum‚',$8B)
                       Else Ecrit(X+7,Y+9,'Eteint',$8B);
   If(HotKey and 32=32)Then Ecrit(X+7,Y+10,'Allum‚',$8B)
                       Else Ecrit(X+7,Y+10,'Eteint',$8B);
   If(HotKey and 64=64)Then Ecrit(X+7,Y+11,'Allum‚',$8B)
                       Else Ecrit(X+7,Y+11,'Eteint',$8B);
   If(HotKey and 128=128)Then Ecrit(X+7,Y+12,'Ouvert',$8B)
                         Else Ecrit(X+7,Y+12,'Fermer',$8B);
  End;

 Begin
  CopiePage(0,2);
  EffaceLigne;
  Selecte(X+44,Y,X+53,$B);
  X := (Colonne - 29) div 2;
  Y := (Ligne - 17) div 2;
  FixeCadre(PaletteCadre_E1);
  CadrePlain(X,Y,X+29,Y+16,$8F);
  EcritUnAttribut(X,Y,15);
  EcritUnAttribut(X+1,Y,15);
  Ecrit(X+11,Y,'Hot Key',$FC);
  FixeCadre(PaletteCadre_E2);
  CadreVide(X+1,Y+2,X+28,Y+13,$8F);
  Ecrit(X+3,Y+3,'Bit Valeur   Description',$8E);
  Ecrit(X+3,Y+4,'--- -------- ------------',$8F);
  For Compteur := 0 to 7 do EcritUnCaractere(X+4,Y+5+Compteur,48+Compteur,$8B);
  Ecrit(X+16,Y+5,'Shift droite',$8F);
  Ecrit(X+16,Y+6,'Shift gauche',$8F);
  Ecrit(X+16,Y+7,'Controle',$8F);
  Ecrit(X+16,Y+8,'Alternate',$8F);
  Ecrit(X+16,Y+9,'Scroll Lock',$8F);
  Ecrit(X+16,Y+10,'Num Lock',$8F);
  Ecrit(X+16,Y+11,'Caps Lock',$8F);
  Ecrit(X+16,Y+12,'Insert',$8F);
  Ecrit(X+9,Y+15,#168+' Correcte '+#169,$F9);
  EcritUnAttribut(X+9,Y+15,$8F);
  EcritUnAttribut(X+11,Y+15,$FC);
  EcritUnAttribut(X+20,Y+15,$8F);
  InstalleClignotement;
  Boucle := 0;
10:Repeat
   Boucle := (Boucle + 1) and $FF;
   If(Boucle = 1)Then AfficheEtat;
  Until (ClavierPrete = 1);
  Touche := LitClavier;
  If(Lo(Touche) = 0)and(Hi(Touche) = 82)Then Goto 10;
  DesinstalleClignotement;
  CopiePage(2,0);
  Touche := 0;
 End;

 Procedure AfficheHotKeyAT;
 Label 10;
 Var X,Y      : Byte;
     Compteur : Byte;
     Boucle   : Byte;
     Tableau  : Pointer;

  Procedure AfficheEtat;
  Var HotKey : Byte Absolute $0040:$18;
  Begin
   If(HotKey and 1=1)Then Ecrit(X+7,Y+5,'Enfonc‚',$8B)
                     Else Ecrit(X+7,Y+5,'Lach‚  ',$8B);
   If(HotKey and 2=2)Then Ecrit(X+7,Y+6,'Enfonc‚',$8B)
                     Else Ecrit(X+7,Y+6,'Lach‚  ',$8B);
   If(HotKey and 4=4)Then Ecrit(X+7,Y+7,'Enfonc‚',$8B)
                     Else Ecrit(X+7,Y+7,'Lach‚  ',$8B);
   If(HotKey and 8=8)Then Ecrit(X+7,Y+8,'Actionn‚',$8B)
                     Else Ecrit(X+7,Y+8,'Absent  ',$8B);
   If(HotKey and 16=16)Then Ecrit(X+7,Y+9,'Enfonc‚',$8B)
                       Else Ecrit(X+7,Y+9,'Lach‚  ',$8B);
   If(HotKey and 32=32)Then Ecrit(X+7,Y+10,'Enfonc‚',$8B)
                       Else Ecrit(X+7,Y+10,'Lach‚  ',$8B);
   If(HotKey and 64=64)Then Ecrit(X+7,Y+11,'Enfonc‚',$8B)
                       Else Ecrit(X+7,Y+11,'Lach‚  ',$8B);
   If(HotKey and 128=128)Then Ecrit(X+7,Y+12,'Enfonc‚',$8B)
                         Else Ecrit(X+7,Y+12,'Lach‚  ',$8B);
  End;

 Begin
  CopiePage(0,2);
  Selecte(X+44,Y,X+53,$B);
  EffaceLigne;
  X := (Colonne - 29) div 2;
  Y := (Ligne - 17) div 2;
  FixeCadre(PaletteCadre_E1);
  CadrePlain(X,Y,X+29,Y+16,$8F);
  EcritUnAttribut(X,Y,15);
  EcritUnAttribut(X+1,Y,15);
  Ecrit(X+10,Y,'Hot Key AT',$FC);
  FixeCadre(PaletteCadre_E2);
  CadreVide(X+1,Y+2,X+28,Y+13,$8F);
  Ecrit(X+3,Y+3,'Bit Valeur   Description',$8E);
  Ecrit(X+3,Y+4,'--- -------- ------------',$8F);
  For Compteur := 0 to 7 do EcritUnCaractere(X+4,Y+5+Compteur,48+Compteur,$8B);
  Ecrit(X+16,Y+5,'Ctrl gauche',$8F);
  Ecrit(X+16,Y+6,'Alt gauche',$8F);
  Ecrit(X+16,Y+7,'SysReq',$8F);
  Ecrit(X+16,Y+8,'Pause',$8F);
  Ecrit(X+16,Y+9,'Scroll Lock',$8F);
  Ecrit(X+16,Y+10,'Num Lock',$8F);
  Ecrit(X+16,Y+11,'Caps Lock',$8F);
  Ecrit(X+16,Y+12,'Insert',$8F);
  Ecrit(X+9,Y+15,#168+' Correcte '+#169,$F9);
  EcritUnAttribut(X+9,Y+15,$8F);
  EcritUnAttribut(X+11,Y+15,$FC);
  EcritUnAttribut(X+20,Y+15,$8F);
  InstalleClignotement;
  Boucle := 0;
10:Repeat
   Boucle := (Boucle + 1) and $FF;
   If(Boucle = 1)Then AfficheEtat;
  Until (ClavierPrete = 1);
  Touche := LitClavier;
  If(Lo(Touche) = 0)and(Hi(Touche) = 82)Then Goto 10;
  DesinstalleClignotement;
  CopiePage(2,0);
  Touche := 0;
 End;

 Procedure BarAutopsie;
 Begin
  Ecrit(3,Ligne,'F2',$FC);
  Ecrit(6,Ligne,'Autopsie',MenuNormal);
 End;

 Function Data(Numero:Byte):String;
 Var Temp : String;
 Begin
  Temp := '0040h:' + Hex2(Donne[Numero]) + 'h ';
  If((Donne[Numero+1] - Donne[Numero]) = 1)Then
  Begin
   Temp := Temp + Hex2(Mem[$40:Donne[Numero]]) + 'h';
  End
   else
  Begin
   Temp := Temp + Hex4(MemW[$40:Donne[Numero]]) + 'h';
  End;
  Data := Temp;
 End;

 Procedure Adate(Numero:Byte);
 Var YP : Word;
 Begin
  YP := Y + YC + 5;
  If(Position > Numero)Then Temp := Position - Numero
                       Else Temp := Numero - Position;
  If(Numero >= Debut)and(Numero <= Fin)Then { Horloge affich‚ ? }
  Begin
   If(Position > Numero)Then Ecrit(X+4,YP-Temp,Data(Numero),$9B) else
   If(Position < Numero)Then Ecrit(X+4,YP+Temp,Data(Numero),$9B) else
   Begin
    Ecrit(X+4,YP,Data(Numero),$B);
   End;
  End;
 End;

 Function Nom(Numero:Byte):String;
 Begin
  Case Numero of
   $00..$01 : Nom := 'Adresse de base (port) de COM1';
   $02..$03 : Nom := 'Adresse de base (port) de COM2';
   $04..$05 : Nom := 'Adresse de base (port) de COM3';
   $06..$07 : Nom := 'Adresse de base (port) de COM4';
   $08..$09 : Nom := 'Adresse de base (port) de LPT1';
   $0A..$0B : Nom := 'Adresse de base (port) de LPT2';
   $0C..$0D : Nom := 'Adresse de base (port) de LPT3';
   $0E..$0F : Nom := 'Adresse de base (port) de LPT4';
   $10..$11 : Nom := 'Equipement (Interruption 11h)';
        $12 : Nom := 'R‚serv‚';
   $13..$14 : Nom := 'Taille m‚moire exprime en KB';
   $15..$16 : Nom := 'R‚serv‚';
        $17 : Nom := 'Etat du clavier';
        $18 : Nom := 'Etat actuel du clavier';
        $19 : Nom := 'Alt-Code';
   $1A..$1B : Nom := 'Adresse d‚but buffer clavier';
   $1C..$1D : Nom := 'Adresse de fin buffer clavier';
   $1E..$3D : Nom := 'Buffer clavier';
        $3E : Nom := 'Recalibre lecteur disquette';
        $3F : Nom := 'Etat du lecteur disquette';
        $40 : Nom := 'Compteur temps moteur disque';
        $41 : Nom := 'Erreur interruption 13h';
   $42..$48 : Nom := 'Etat du contr“leur';
        $49 : Nom := 'Mode actuel de l''‚cran';
   $4A..$4B : Nom := 'Nombre colonne texte';
   $4C..$4D : Nom := 'Taille d''une page vid‚o';
   $4E..$4F : Nom := 'Offset de l''‚cran';
   $50..$5F : Nom := 'Position du curseur';
        $60 : Nom := 'Ligne d‚part du curseur';
        $61 : Nom := 'Ligne fin du curseur';
        $62 : Nom := 'Num‚ro de la page vid‚o';
   $63..$64 : Nom := 'Adresse de base carte vid‚o';
        $65 : Nom := 'Registre de s‚lection de mode';
        $66 : Nom := 'Palette de couleur utilis‚';
   $67..$68 : Nom := 'Pointeur vers routine d''init.';
   $69..$6A : Nom := 'Segment ROM d''I/O';
        $6B : Nom := 'Indique d''interruption';
   $6C..$6D : Nom := 'Compteur de l''heure (Basse)';
   $6E..$6F : Nom := 'Compteur de l''heure (Haut)';
        $70 : Nom := 'Indicateur de minuit';
        $71 : Nom := 'Break a ‚t‚ enfonc‚e';
   $72..$73 : Nom := 'Indicteur d‚marrage a chaud';
        $74 : Nom := 'Erreur de disque dur';
        $75 : Nom := 'Nombre disque dur';
        $76 : Nom := 'Octet de contr“le';
        $77 : Nom := 'Adresse de base du contr“leur';
        $78 : Nom := 'Temps maximum r‚ponse de LPT1';
        $79 : Nom := 'Temps maximum r‚ponse de LPT2';
        $7A : Nom := 'Temps maximum r‚ponse de LPT3';
        $7B : Nom := 'Temps maximum r‚ponse de LPT4';
        $7C : Nom := 'Temps maximum r‚ponse de COM1';
        $7D : Nom := 'Temps maximum r‚ponse de COM2';
        $7E : Nom := 'Temps maximum r‚ponse de COM3';
        $7F : Nom := 'Temps maximum r‚ponse de COM4';
   $80..$81 : Nom := 'Offset d‚but buffer clavier';
   $82..$83 : Nom := 'Offset fin buffer clavier';
        $84 : Nom := 'Nombre ligne -1 (EGA ou plus)';
   $85..$86 : Nom := 'Hauteur d''un caractŠre';
   $87..$88 : Nom := 'Pour le contr“le du vid‚o';
   $89..$8A : Nom := 'R‚serv‚';
        $8B : Nom := 'Temps de transfert disquette';
        $8C : Nom := 'Etat du contr“leur';
        $8D : Nom := 'Code d''erreur du contr“leur';
        $8E : Nom := 'Contr“leur d''int. disque dur';
        $8F : Nom := 'R‚serv‚';
        $90 : Nom := 'Octet d''‚tat du lecteur A:';
        $91 : Nom := 'Octet d''‚tat du lecteur B:';
   $92..$93 : Nom := 'R‚serv‚';
        $94 : Nom := 'Num‚ro de cylindre du lecteur 0';
        $95 : Nom := 'Num‚ro de cylindre du lecteur 1';
        $96 : Nom := 'ModŠle de clavier';
        $97 : Nom := 'Etat des lumiŠres du clavier';
   $98..$A0 : Nom := 'Horloge en temps r‚el';
  End;
 End;

Begin
 SelecteMemoire;
 FixeCadre(PaletteCadre_E1);
 CadrePlain(X,Y,X+53,Y+16,$9F);
 EcritUnAttribut(X,Y,15);
 EcritUnAttribut(X+1,Y,15);
 Ecrit(X+20,Y,'Carte BIOS',$FC);
 FixeCadre(PaletteCadre_E2);
 CadreVide(X+2,Y+2,X+51,Y+13,$9F);
 Ecrit(X+4,Y+3,'Adresse   Donn‚ Fonction',$9E);
 Ecrit(X+4,Y+4,'--------- ----- -------------------------------',$9F);
 For YC := 0 to 7 do
 Begin
  Ecrit(X+1,Y+5+YC,#158+#159,$F0);
  Ecrit(X+4,Y+5+YC,Data(YC),$9B);
  Ecrit(X+20,Y+5+YC,Nom(Donne[YC]),$9F);
 End;
 Ecrit(X+1,Y+5,#164+#165,$F);
 Ecrit(X+1,Y+12,#248+#249,$F);
 AfficheTouche(X+3,Y+15,X+16,Y+15,X+27,Y+15,X+40,Y+15);
 InstalleClignotement;
 Position := 0;
 YC := 0;
 Repeat
  Selecte(X+1,Y+6+((6 * Position) div 73),X+2,$F); { Position bar }
  Selecte(X+3,Y+5+YC,X+50,$B);
  Boucle := 0;
  Repeat
   Boucle := (Boucle + 1) and $FF;
   If(Boucle = 1)Then
   Begin
    Debut := Position - YC;
    Fin   := Debut + 7;
    Adate(HotKey);
    Adate(HotKeyAT);
    Adate(HorlogeLo);
    Adate(HorlogeHi);
    Adate(HorlogeReel);
    Horloge(X+44,Y);
   End;
  Until (ClavierPrete = 1);
  Touche := LitClavier;
  If(Position > 70)and(Mem[$FFFF:$E]>252)Then Couleur := $97
                                         Else Couleur := $9F;
  Selecte(X+3,Y+5+YC,X+19,$9B);
  Selecte(X+20,Y+5+YC,X+50,Couleur);
  Selecte(X+1,Y+6+((6 * Position) div 73),X+2,$F0); { Position bar }
  Case Lo(Touche) of
   0 : Begin
        Case Hi(Touche) of
         60 : Begin
               Case Position of
                HotKey   : AfficheHotKey;
                HotKeyAT : AfficheHotKeyAT;
               End;
              End;
         72 : Begin
               If(Position > 0)Then
               Begin
                Dec(Position);
                If(YC > 0)Then Dec(YC)
                 else
                Begin
                 HautVersBas(X+3,Y+5,X+50,Y+12,$B);
                 If(Position > 70)and(Mem[$FFFF:$E]>252)Then Couleur := $97
                                                        Else Couleur := $9F;
                 Ecrit(X+4,Y+5+YC,Data(Position),$9B);
                 Ecrit(X+20,Y+5+YC,Nom(Donne[Position]),Couleur);
                End;
                If(Position in [HotKey,HotKeyAT])Then BarAutopsie
                 else
                If(Position in [6..15])Then EffaceLigne;
               End;
              End;
         80 : Begin
               If(Position < 72)Then
               Begin
                Inc(Position);
                If(YC < 7)Then Inc(YC)
                 else
                Begin
                 BasVersHaut(X+3,Y+5,X+50,Y+12,$B);
                 If(Position > 70)and(Mem[$FFFF:$E]>252)Then Couleur := $97
                                                        Else Couleur := $9F;
                 Ecrit(X+4,Y+5+YC,Data(Position),$9B);
                 Ecrit(X+20,Y+5+YC,Nom(Donne[Position]),Couleur);
                End;
                If(Position in [HotKey,HotKeyAT])Then BarAutopsie
                 else
                If(Position in [6..15])Then EffaceLigne;
               End;
              End;
        End;
       End;
  End;
 Until (Lo(Touche) in [27,32,65,97,83,115,78,110]);
 DesinstalleClignotement;
 AfficheBar;
 FenetreTapiserie(X,Y,X+55,Y+17,173,174,$78,$87);
 DerniereLigne;
End;